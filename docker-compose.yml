services:

  db-postgres:
    image: postgres:17-alpine
    ports:
      - '5432:5432'
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./db_data:/var/lib/postgresql/data


  db-redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    restart: always
    volumes:
      - ./redis_data:/var/lib/redis/data

  app-back:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      - db-postgres
      - db-redis
    command: [
      "bash", "-c", "
        sleep 10 && \
        alembic upgrade head && \
        bash start_api.sh"
    ]


  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db-redis
      - db-postgres
      - app-back
    env_file:
      - .env
    command: ["celery", "-A", "app.core.celery", "worker", "-l", "INFO"]

  rabbitmq:
    image: rabbitmq:4.0.2-management
    ports:
      - '15672:15672'
      - '5672:5672'
    restart: always
    depends_on:
      - app-back
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq


  rabbitmq-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - app-back
    command: ["python", "-m", "app.core.rq.consumer"]
    env_file:
      - .env

  rabbitmq-publisher:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - app-back
      - rabbitmq-consumer
    command: [ "python", "-m", "app.core.rq.publisher" ]
    env_file:
      - .env